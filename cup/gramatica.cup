package Example;

import java_cup.runtime.*;
import Example.Parser.Expr;

parser code {:
    
:}

terminal TRUE, FALSE, FLOAT, SEMICOLON, PAR_C, PAR_A, MUSTACHE_A, MUSTACHE_C, COMILLA_DOBLE, CORCH_A, CORCH_C, ASIG, IGUAL, SUM, RES, MENOR, MAYOR MUL, DIV, PORCENT, MAY_IGUAL, MEN_IGUAL, AND, OR, NO_IGUAL, NEGAC, INC, DEC;
terminal Integer NUMBER;

non terminal expr_list, expr_part;
non terminal Expr expr;

program ::= class_decl

class_decl ::= CLASS ID MUSTACHE_A field_declarations method_declarations MUSTACHE_C
	|CLASS ID MUSTACHE_A  method_declarations MUSTACHE_C
	|CLASS ID MUSTACHE_A field_declarations MUSTACHE_C
	|CLASS ID MUSTACHE_A  MUSTACHE_C

field_decl ::=  type MUSTACHE_A ID 
			| ID CORCH_A int_literal CORCH_C MUSTACHE_C SEMICOLON

field_declarations ::= field_decl
			|field_declarations SEMICOLON fiel_decl


method_declarations ::= type ID PAR_A MUSTACHE_A type ID MUSTACHE_C PAR_C body
			

method_decl ::= method_declarations
		|method_decl 


int_literal ::= NUM 
		|NUM NUM


body ::= block | extern ;


block ::= {field_decl* statement*}


type ::= integer | float | bool | id | void



